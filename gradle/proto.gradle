/*
 * proto.gradle
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2015-2018 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.google.protobuf'

ext {
    protoMajorVersion = '2'
}

if ( System.getenv('PROTO_VERSION') != null) {
    protoMajorVersion = System.getenv('PROTO_VERSION')
    if (protoMajorVersion != "2") {
        if (protoMajorVersion == "3") {
            protobufVersion = protobuf3Version
        } else {
            throw new GradleException("Unknown protobuf major version: ${protoMajorVersion}")
        }
    } else {
        protobufVersion = protobuf2Version
    }
}

sourceSets {
    main {
        proto {
            srcDirs = ['proto/main']
        }
    }
    test {
        proto {
            srcDirs = ['proto/test', "proto${protoMajorVersion}/test"]
        }
    }
}

protobuf {
    generatedFilesBaseDir = "${projectDir}/${protobufOutDir}"
    clean {
        delete generatedFilesBaseDir
    }
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    generateProtoTasks {
        all().each { task ->
            task.include "${projectDir}/proto/include"
            task.include "${projectDir}/proto${protoMajorVersion}/include"
            if (task.name != 'generateProto') {
                task.include "${projectDir}/proto/main"
            }
        }
    }
}

// Configure the published jar to include any external protos
jar {
    from ("${projectDir}/proto/include") {
        include '**/*.proto'
    }
    from ("${projectDir}/proto${protoMajorVersion}/include") {
        include '**/*.proto'
    }
}
